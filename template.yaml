AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: PetstoreAPI Sample
Parameters:
  S3BucketForLayerPackage:
    Type: String
    Description: レイヤー用のパッケージを保存したS3バケット
  S3KeyForLayerPackage:
    Type: String
    Description: レイヤー用パッケージのS3キー
Globals:
  Function:
    Runtime: python3.7
    Environment:
      Variables:
        PETS_TABLE: !Ref PetsTable
    Layers:
      - !Ref PetStoreAPILayer
Resources:
  PetsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: Number
  PetStoreAPILayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: 'Lambda Layer for Pet Store API'
      ContentUri:
        Bucket: !Sub "${S3BucketForLayerPackage}"
        Key: !Sub "${S3KeyForLayerPackage}"
  CreatePet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/pets/create.handler
      CodeUri: src
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PetsTable
  DeletePet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/pets/delete.handler
      CodeUri: src
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PetsTable
  GetPet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/pets/get.handler
      CodeUri: src
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PetsTable
  ListPets:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/pets/list.handler
      CodeUri: src
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref PetsTable
  UpdatePet:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/pets/update.handler
      CodeUri: src
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PetsTable
  PetstoreAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
  LambdaPermissionCreatePet:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CreatePet
      Principal: apigateway.amazonaws.com
  LambdaPermissionDeletePet:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DeletePet
      Principal: apigateway.amazonaws.com
  LambdaPermissionGetPet:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetPet
      Principal: apigateway.amazonaws.com
  LambdaPermissionListPets:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ListPets
      Principal: apigateway.amazonaws.com
  LambdaPermissionUpdatePet:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UpdatePet
      Principal: apigateway.amazonaws.com
  CreatePetLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreatePet}
      RetentionInDays: 14
  DeletePetLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeletePet}
      RetentionInDays: 14
  GetPetLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetPet}
      RetentionInDays: 14
  ListPetsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ListPets}
      RetentionInDays: 14
  UpdatePetLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpdatePet}
      RetentionInDays: 14
Outputs:
  ApiURL:
    Description: API endpoint URL for Petstore API
    Value: !Sub "https://${PetstoreAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
